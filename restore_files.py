#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
"""

import os
import shutil

def restore_files():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"""
    print("=== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –§–ê–ô–õ–û–í ===\n")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏)
    files_to_restore = [
        # –û—Ç—á–µ—Ç—ã
        "MOSCOW_TIME_REPORT.md",
        "ACTIVITY_LOGGING_UPDATE_REPORT.md", 
        "ACTIVITY_LOG_REPORT.md",
        "BLUE_ALERT_REMOVAL_REPORT.md",
        "DATA_PROTECTION_GUIDE.md",
        "DBeaver_Integration_Guide.md",
        "DBeaver_Setup_Guide.md",
        "LOGIN_FIX_REPORT.md",
        "DATABASE_FIX_REPORT.md",
        "AVATAR_EDITOR_REPORT.md",
        "AVATAR_FIX_REPORT.md",
        "REGISTRATION_DATES_REPORT.md",
        "UPDATED_ACCESS_REPORT.md",
        "ROLES_UPDATE_REPORT.md",
        "UUID_SECURITY_REPORT.md",
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
        "test_moscow_time.py",
        "fix_moscow_time.py",
        "test_activity_logging.py",
        "create_activity_log_table.py",
        "test_activity_log.py",
        "test_no_blue_alert.py",
        "database_protection_system_simple.py",
        "start_simple_protection.py",
        "check_database_details.py",
        "safe_database_operations.py",
        "test_app.py",
        "fix_admin2_password.py",
        "test_login.py",
        "backup_database.py",
        "fix_database.py",
        "verify_database.py",
        "test_phone_numbers.py",
        "test_avatar_editor_hidden.py",
        "test_clean_page.py",
        "test_minimal_padding.py",
        "test_fixed_sidebar.py",
        "test_scrolling_aggressive.py",
        "test_scrolling_final.py",
        "test_scrolling_fix.py",
        "test_page_length.py",
        "test_sidebar_fix.py",
        "test_edit_page_scrolling.py",
        "test_avatar_editor.py",
        "check_avatar_upload.py",
        "test_avatar_upload.py",
        "check_current_users.py",
        "set_moscow_time.py",
        "demo_seconds_display.py",
        "set_today_with_seconds.py",
        "verify_today_dates.py",
        "set_today_registration_dates.py",
        "create_users_with_dates.py",
        "recreate_db_with_registration_dates.py",
        "test_registration_dates.py",
        "migrate_registration_dates.py",
        "update_registration_dates.py",
        "test_user_access.py",
        "test_new_roles.py",
        "update_roles.py",
        "test_admin_functions.py",
        "check_kulikov.py",
        "demo_uuid_security.py",
        "test_add_user.py",
        "create_uuid_db.py",
        "init_db.py",
        "create_user.py",
        
        # –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö
        "start_protection.py",
        "auto_data_protection.py",
        "database_protection_system.py",
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        "babel.cfg",
        ".dockerignore",
        ".flaskenv",
        "app.ini"
    ]
    
    restored_count = 0
    
    print("üìã –°–ø–æ—Å–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:")
    print("1. –ò–∑ Git –∏—Å—Ç–æ—Ä–∏–∏:")
    print("   git log --oneline")
    print("   git checkout <commit-hash> -- filename.py")
    print()
    print("2. –ò–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:")
    print("   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ backup_folder/")
    print()
    print("3. –ò–∑ –∫–æ—Ä–∑–∏–Ω—ã Windows:")
    print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä–∑–∏–Ω—É Windows")
    print()
    print("4. –ò–∑ –æ–±–ª–∞—á–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:")
    print("   –ï—Å–ª–∏ —Ñ–∞–π–ª—ã –±—ã–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    backup_folders = ["backup", "backup_files", "old_files", "temp_backup"]
    
    for folder in backup_folders:
        if os.path.exists(folder):
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: {folder}")
            for file in files_to_restore:
                backup_path = os.path.join(folder, file)
                if os.path.exists(backup_path):
                    try:
                        shutil.copy2(backup_path, file)
                        print(f"   ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {file}")
                        restored_count += 1
                    except Exception as e:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è {file}: {e}")
    
    if restored_count == 0:
        print("‚ùå –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print()
        print("üîß –†—É—á–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É backup/")
        print("2. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ç—É–¥–∞ –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
    else:
        print(f"\n‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {restored_count}")

if __name__ == '__main__':
    restore_files()

