// –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∞–≤–∞—Ç–∞—Ä–æ–≤
class SimpleAvatarEditor {
    constructor(containerId, inputId, previewId) {
        console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ SimpleAvatarEditor...');
        
        this.container = document.getElementById(containerId);
        this.input = document.getElementById(inputId);
        this.preview = document.getElementById(previewId);
        
        if (!this.container || !this.input || !this.preview) {
            console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
            return;
        }
        
        this.canvas = null;
        this.ctx = null;
        this.image = null;
        this.isDragging = false;
        this.dragStart = { x: 0, y: 0 };
        this.offset = { x: 0, y: 0 };
        this.scale = 1;
        
        console.log('‚úÖ SimpleAvatarEditor —Å–æ–∑–¥–∞–Ω');
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    createInterface() {
        console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...');
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.container.innerHTML = '';
        
        // –°–æ–∑–¥–∞–µ–º canvas
        this.canvas = document.createElement('canvas');
        this.canvas.width = 300;
        this.canvas.height = 300;
        this.canvas.style.border = '3px solid #007bff';
        this.canvas.style.borderRadius = '50%';
        this.canvas.style.cursor = 'move';
        this.canvas.style.maxWidth = '100%';
        this.canvas.style.height = 'auto';
        this.canvas.style.margin = '0 auto';
        this.canvas.style.display = 'block';
        
        this.ctx = this.canvas.getContext('2d');
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è canvas
        const canvasContainer = document.createElement('div');
        canvasContainer.className = 'text-center mb-3';
        canvasContainer.style.border = '2px solid #e9ecef';
        canvasContainer.style.borderRadius = '10px';
        canvasContainer.style.padding = '20px';
        canvasContainer.style.backgroundColor = '#f8f9fa';
        canvasContainer.appendChild(this.canvas);
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const controls = document.createElement('div');
        controls.className = 'd-flex justify-content-center gap-2 mb-3 flex-wrap';
        controls.innerHTML = `
            <button type="button" class="btn btn-outline-primary btn-sm" onclick="simpleAvatarEditor.rotate(-90)">
                <i class="bi bi-arrow-counterclockwise"></i> –ü–æ–≤–µ—Ä–Ω—É—Ç—å –≤–ª–µ–≤–æ
            </button>
            <button type="button" class="btn btn-outline-primary btn-sm" onclick="simpleAvatarEditor.rotate(90)">
                <i class="bi bi-arrow-clockwise"></i> –ü–æ–≤–µ—Ä–Ω—É—Ç—å –≤–ø—Ä–∞–≤–æ
            </button>
            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="simpleAvatarEditor.reset()">
                <i class="bi bi-arrow-clockwise"></i> –°–±—Ä–æ—Å–∏—Ç—å
            </button>
        `;
        
        // –°–æ–∑–¥–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
        const hints = document.createElement('div');
        hints.className = 'alert alert-info small';
        hints.innerHTML = `
            <strong>üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä:</strong><br>
            ‚Ä¢ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º—ã—à–∫–æ–π<br>
            ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–ª–µ—Å–∏–∫–æ –º—ã—à–∏ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è<br>
            ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç–∞
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.container.appendChild(canvasContainer);
        this.container.appendChild(controls);
        this.container.appendChild(hints);
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        this.bindEvents();
        
        console.log('‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞–Ω');
    }
    
    // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
    bindEvents() {
        if (!this.canvas) return;
        
        // –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ
        this.canvas.addEventListener('mousedown', (e) => {
            this.isDragging = true;
            this.dragStart = this.getMousePos(e);
            this.canvas.style.cursor = 'grabbing';
        });
        
        document.addEventListener('mousemove', (e) => {
            if (this.isDragging) {
                const pos = this.getMousePos(e);
                this.offset.x += pos.x - this.dragStart.x;
                this.offset.y += pos.y - this.dragStart.y;
                this.dragStart = pos;
                this.draw();
            }
        });
        
        document.addEventListener('mouseup', () => {
            this.isDragging = false;
            if (this.canvas) {
                this.canvas.style.cursor = 'move';
            }
        });
        
        // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
        this.canvas.addEventListener('wheel', (e) => {
            e.preventDefault();
            const delta = e.deltaY > 0 ? 0.9 : 1.1;
            this.scale = Math.max(0.5, Math.min(3, this.scale * delta));
            this.draw();
        });
        
        console.log('‚úÖ –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    loadImage(file) {
        console.log('üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
        
        const reader = new FileReader();
        reader.onload = (e) => {
            this.image = new Image();
            this.image.onload = () => {
                console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
                this.reset();
                this.draw();
            };
            this.image.src = e.target.result;
        };
        reader.readAsDataURL(file);
    }
    
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞
    draw() {
        if (!this.image || !this.canvas) return;
        
        // –û—á–∏—â–∞–µ–º canvas
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        
        // –°–æ–∑–¥–∞–µ–º –∫—Ä—É–≥–ª—É—é –º–∞—Å–∫—É
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.arc(this.canvas.width / 2, this.canvas.height / 2, this.canvas.width / 2 - 3, 0, 2 * Math.PI);
        this.ctx.clip();
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏—é
        const centerX = this.canvas.width / 2;
        const centerY = this.canvas.height / 2;
        const scaledWidth = this.image.width * this.scale;
        const scaledHeight = this.image.height * this.scale;
        
        // –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        this.ctx.drawImage(
            this.image,
            centerX - scaledWidth / 2 + this.offset.x,
            centerY - scaledHeight / 2 + this.offset.y,
            scaledWidth,
            scaledHeight
        );
        
        this.ctx.restore();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
        this.updatePreview();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    updatePreview() {
        if (!this.canvas || !this.preview) return;
        
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π canvas –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        const tempCanvas = document.createElement('canvas');
        tempCanvas.width = 64;
        tempCanvas.height = 64;
        const tempCtx = tempCanvas.getContext('2d');
        
        // –°–æ–∑–¥–∞–µ–º –∫—Ä—É–≥–ª—É—é –º–∞—Å–∫—É
        tempCtx.save();
        tempCtx.beginPath();
        tempCtx.arc(32, 32, 32, 0, 2 * Math.PI);
        tempCtx.clip();
        
        // –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        tempCtx.drawImage(this.canvas, 0, 0, 64, 64);
        tempCtx.restore();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º preview
        this.preview.src = tempCanvas.toDataURL();
        this.preview.style.display = 'inline-block';
    }
    
    // –ü–æ–≤–æ—Ä–æ—Ç
    rotate(degrees) {
        if (!this.image) return;
        
        console.log(`üîÑ –ü–æ–≤–æ—Ä–æ—Ç –Ω–∞ ${degrees} –≥—Ä–∞–¥—É—Å–æ–≤`);
        
        const tempCanvas = document.createElement('canvas');
        const tempCtx = tempCanvas.getContext('2d');
        
        const angle = degrees * Math.PI / 180;
        const cos = Math.abs(Math.cos(angle));
        const sin = Math.abs(Math.sin(angle));
        const newWidth = this.image.width * cos + this.image.height * sin;
        const newHeight = this.image.width * sin + this.image.height * cos;
        
        tempCanvas.width = newWidth;
        tempCanvas.height = newHeight;
        
        tempCtx.translate(newWidth / 2, newHeight / 2);
        tempCtx.rotate(angle);
        tempCtx.drawImage(this.image, -this.image.width / 2, -this.image.height / 2);
        
        const newImage = new Image();
        newImage.onload = () => {
            this.image = newImage;
            this.draw();
        };
        newImage.src = tempCanvas.toDataURL();
    }
    
    // –°–±—Ä–æ—Å
    reset() {
        console.log('üîÑ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫');
        this.offset = { x: 0, y: 0 };
        this.scale = 1;
        this.draw();
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –º—ã—à–∏
    getMousePos(e) {
        const rect = this.canvas.getBoundingClientRect();
        return {
            x: e.clientX - rect.left,
            y: e.clientY - rect.top
        };
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    getEditedImage() {
        if (!this.image || !this.canvas) return null;
        
        console.log('üíæ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        
        const outputCanvas = document.createElement('canvas');
        outputCanvas.width = 200;
        outputCanvas.height = 200;
        const outputCtx = outputCanvas.getContext('2d');
        
        // –°–æ–∑–¥–∞–µ–º –∫—Ä—É–≥–ª—É—é –º–∞—Å–∫—É
        outputCtx.save();
        outputCtx.beginPath();
        outputCtx.arc(100, 100, 100, 0, 2 * Math.PI);
        outputCtx.clip();
        
        // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        const scale = 200 / 300;
        const centerX = 100;
        const centerY = 100;
        const scaledWidth = this.image.width * this.scale * scale;
        const scaledHeight = this.image.height * this.scale * scale;
        
        outputCtx.drawImage(
            this.image,
            centerX - scaledWidth / 2 + this.offset.x * scale,
            centerY - scaledHeight / 2 + this.offset.y * scale,
            scaledWidth,
            scaledHeight
        );
        
        outputCtx.restore();
        
        return outputCanvas.toDataURL('image/jpeg', 0.9);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
let simpleAvatarEditor = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
function initSimpleAvatarEditor() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SimpleAvatarEditor...');
    
    const container = document.getElementById('avatar-editor-container');
    const input = document.getElementById('avatar');
    const preview = document.getElementById('avatar-preview');
    
    if (!container || !input || !preview) {
        console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞');
        return false;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä
    simpleAvatarEditor = new SimpleAvatarEditor('avatar-editor-container', 'avatar', 'avatar-preview');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    input.addEventListener('change', function(e) {
        const file = e.target.files[0];
        console.log('üìÅ –§–∞–π–ª –≤—ã–±—Ä–∞–Ω:', file?.name);
        
        if (file) {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
            if (file.size > 2 * 1024 * 1024) {
                alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 2 –ú–ë');
                this.value = '';
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
            const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!validTypes.includes(file.type)) {
                alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç—ã: PNG, JPG, JPEG');
                this.value = '';
                return;
            }
            
            console.log('‚úÖ –§–∞–π–ª –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            container.style.display = 'block';
            console.log('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ–∫–∞–∑–∞–Ω');
            
            // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
            simpleAvatarEditor.createInterface();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            simpleAvatarEditor.loadImage(file);
            
        } else {
            console.log('üìÅ –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω');
            container.style.display = 'none';
        }
    });
    
    console.log('‚úÖ SimpleAvatarEditor –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    return true;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üîç DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä...');
    initSimpleAvatarEditor();
});

console.log('üì¶ SimpleAvatarEditor –∑–∞–≥—Ä—É–∂–µ–Ω');
