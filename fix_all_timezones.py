#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–∏–≤–æ–¥–∏—Ç –≤—Å–µ –≤—Ä–µ–º—è –∫ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É —á–∞—Å–æ–≤–æ–º—É –ø–æ—è—Å—É
"""

from app import create_app
from app.extensions import db
from app.models.users import Users
from app.models.activity_log import ActivityLog
from app.models.supply import Material, Equipment, SupplyOrder
from datetime import datetime
import pytz
from app.utils.timezone_utils import to_moscow_time, get_moscow_now

def fix_all_timezones():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    app = create_app()
    
    with app.app_context():
        try:
            print("=== –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ù–´–• –ú–ï–¢–û–ö ===\n")
            
            # –ß–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞
            utc_tz = pytz.UTC
            moscow_tz = pytz.timezone('Europe/Moscow')
            
            total_updated = 0
            
            # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print("1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            users = Users.query.all()
            users_updated = 0
            
            for user in users:
                if user.registration_date:
                    old_date = user.registration_date
                    moscow_date = to_moscow_time(old_date)
                    
                    if moscow_date != old_date:
                        user.registration_date = moscow_date
                        users_updated += 1
                        print(f"   ‚úÖ {user.login}: {old_date} ‚Üí {moscow_date}")
            
            print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_updated}")
            total_updated += users_updated
            
            # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∂—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π
            print("\n2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∂—É—Ä–Ω–∞–ª–µ –¥–µ–π—Å—Ç–≤–∏–π...")
            logs = ActivityLog.query.all()
            logs_updated = 0
            
            for log in logs:
                if log.created_at:
                    old_date = log.created_at
                    moscow_date = to_moscow_time(old_date)
                    
                    if moscow_date != old_date:
                        log.created_at = moscow_date
                        logs_updated += 1
                        print(f"   ‚úÖ {log.action} ({log.user_login}): {old_date} ‚Üí {moscow_date}")
            
            print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∂—É—Ä–Ω–∞–ª–∞: {logs_updated}")
            total_updated += logs_updated
            
            # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
            print("\n3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")
            materials = Material.query.all()
            materials_updated = 0
            
            for material in materials:
                updated = False
                
                if material.created_at:
                    old_date = material.created_at
                    moscow_date = to_moscow_time(old_date)
                    if moscow_date != old_date:
                        material.created_at = moscow_date
                        updated = True
                
                if material.updated_at:
                    old_date = material.updated_at
                    moscow_date = to_moscow_time(old_date)
                    if moscow_date != old_date:
                        material.updated_at = moscow_date
                        updated = True
                
                if updated:
                    materials_updated += 1
                    print(f"   ‚úÖ {material.name}: –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è")
            
            print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {materials_updated}")
            total_updated += materials_updated
            
            # 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
            print("\n4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è...")
            equipment = Equipment.query.all()
            equipment_updated = 0
            
            for item in equipment:
                updated = False
                
                if item.created_at:
                    old_date = item.created_at
                    moscow_date = to_moscow_time(old_date)
                    if moscow_date != old_date:
                        item.created_at = moscow_date
                        updated = True
                
                if item.updated_at:
                    old_date = item.updated_at
                    moscow_date = to_moscow_time(old_date)
                    if moscow_date != old_date:
                        item.updated_at = moscow_date
                        updated = True
                
                if updated:
                    equipment_updated += 1
                    print(f"   ‚úÖ {item.name}: –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è")
            
            print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: {equipment_updated}")
            total_updated += equipment_updated
            
            # 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—ã –Ω–∞ —Å–Ω–∞–±–∂–µ–Ω–∏–µ
            print("\n5. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤...")
            orders = SupplyOrder.query.all()
            orders_updated = 0
            
            for order in orders:
                updated = False
                
                if order.created_at:
                    old_date = order.created_at
                    moscow_date = to_moscow_time(old_date)
                    if moscow_date != old_date:
                        order.created_at = moscow_date
                        updated = True
                
                if order.updated_at:
                    old_date = order.updated_at
                    moscow_date = to_moscow_time(old_date)
                    if moscow_date != old_date:
                        order.updated_at = moscow_date
                        updated = True
                
                if updated:
                    orders_updated += 1
                    print(f"   ‚úÖ –ó–∞–∫–∞–∑ {order.order_number}: –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è")
            
            print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {orders_updated}")
            total_updated += orders_updated
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if total_updated > 0:
                db.session.commit()
                print(f"\n‚úÖ –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–û!")
                print(f"üìä –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {total_updated}")
            else:
                print(f"\n‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
            current_moscow_time = get_moscow_now()
            print(f"üïê –¢–µ–∫—É—â–µ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {current_moscow_time}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            print(f"   üìù –ó–∞–ø–∏—Å–µ–π –∂—É—Ä–Ω–∞–ª–∞: {len(logs)}")
            print(f"   üì¶ –ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {len(materials)}")
            print(f"   üîß –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: {len(equipment)}")
            print(f"   üìã –ó–∞–∫–∞–∑–æ–≤: {len(orders)}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            db.session.rollback()

def test_timezone_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ß–ê–°–û–í–´–• –ü–û–Ø–°–û–í ===\n")
    
    from app.utils.timezone_utils import get_moscow_now, to_moscow_time, format_moscow_time
    
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    moscow_now = get_moscow_now()
    print(f"üïê –¢–µ–∫—É—â–µ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {moscow_now}")
    
    # –¢–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    utc_time = datetime.now(pytz.UTC)
    print(f"üåç UTC –≤—Ä–µ–º—è: {utc_time}")
    
    converted = to_moscow_time(utc_time)
    print(f"üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ –ú–æ—Å–∫–≤—É: {converted}")
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatted = format_moscow_time(utc_time)
    print(f"üìÖ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–æ: {formatted}")
    
    # –¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–∏ –±–µ–∑ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ (–∫–∞–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)
    naive_time = datetime.now()
    print(f"üìÖ –ù–∞–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: {naive_time}")
    
    converted_naive = to_moscow_time(naive_time)
    print(f"üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: {converted_naive}")
    
    formatted_naive = format_moscow_time(naive_time)
    print(f"üìÖ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: {formatted_naive}")

if __name__ == '__main__':
    test_timezone_system()
    print("\n" + "="*60 + "\n")
    fix_all_timezones()
