version: "3.9"

services:
  postgres:
    image: postgres:17
    container_name: postgres
    volumes:
      - ~/pg/pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-sankficeba}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-12345678}
      - POSTGRES_DB=${POSTGRES_DB:-mydb}
    ports:
      - "54321:5432"

  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask
    volumes:
      - ~/migrations:/app/migrations
      - ~/uploads:/app/app/static/uploads
      - static_data:/app/app/static          # 👈 Общее хранилище статики
    env_file:
      - .env

  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    container_name: nginx
    depends_on:
      - flask
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/http-only.conf:/etc/nginx/http-only.conf:ro
      - ./nginx/https.conf:/etc/nginx/https.conf:ro
      - ./start-nginx.sh:/etc/nginx/start-nginx.sh:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - static_data:/app/app/static          # 👈 общий volume со Flask
    entrypoint: ["/bin/sh", "/etc/nginx/start-nginx.sh"]

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot -w /var/www/certbot
        --email jack.ferguson@mail.ru --agree-tos --no-eff-email --non-interactive
        --keep-until-expiring
        -d stroykompleksjob.ru -d www.stroykompleksjob.ru"

volumes:
  static_data:
