#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
"""

import os
import shutil
import glob

def cleanup_repository():
    """–û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏"""
    print("=== –û–ß–ò–°–¢–ö–ê –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø ===\n")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    items_to_remove = [
        # –û—Ç—á–µ—Ç—ã
        "MOSCOW_TIME_REPORT.md",
        "ACTIVITY_LOGGING_UPDATE_REPORT.md",
        "ACTIVITY_LOG_REPORT.md",
        "BLUE_ALERT_REMOVAL_REPORT.md",
        "DATA_PROTECTION_GUIDE.md",
        "DBeaver_Integration_Guide.md",
        "DBeaver_Setup_Guide.md",
        "LOGIN_FIX_REPORT.md",
        "DATABASE_FIX_REPORT.md",
        "AVATAR_EDITOR_REPORT.md",
        "AVATAR_FIX_REPORT.md",
        "REGISTRATION_DATES_REPORT.md",
        "UPDATED_ACCESS_REPORT.md",
        "ROLES_UPDATE_REPORT.md",
        "UUID_SECURITY_REPORT.md",
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
        "test_moscow_time.py",
        "fix_moscow_time.py",
        "test_activity_logging.py",
        "create_activity_log_table.py",
        "test_activity_log.py",
        "test_no_blue_alert.py",
        "database_protection_system_simple.py",
        "start_simple_protection.py",
        "check_database_details.py",
        "safe_database_operations.py",
        "test_app.py",
        "fix_admin2_password.py",
        "test_login.py",
        "backup_database.py",
        "fix_database.py",
        "verify_database.py",
        "test_phone_numbers.py",
        "test_avatar_editor_hidden.py",
        "test_clean_page.py",
        "test_minimal_padding.py",
        "test_fixed_sidebar.py",
        "test_scrolling_aggressive.py",
        "test_scrolling_final.py",
        "test_scrolling_fix.py",
        "test_page_length.py",
        "test_sidebar_fix.py",
        "test_edit_page_scrolling.py",
        "test_avatar_editor.py",
        "check_avatar_upload.py",
        "test_avatar_upload.py",
        "check_current_users.py",
        "set_moscow_time.py",
        "demo_seconds_display.py",
        "set_today_with_seconds.py",
        "verify_today_dates.py",
        "set_today_registration_dates.py",
        "create_users_with_dates.py",
        "recreate_db_with_registration_dates.py",
        "test_registration_dates.py",
        "migrate_registration_dates.py",
        "update_registration_dates.py",
        "test_user_access.py",
        "test_new_roles.py",
        "update_roles.py",
        "test_admin_functions.py",
        "check_kulikov.py",
        "demo_uuid_security.py",
        "test_add_user.py",
        "create_uuid_db.py",
        "init_db.py",
        "create_user.py",
        
        # –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö
        "start_protection.py",
        "auto_data_protection.py",
        "database_protection_system.py",
        
        # –ü–∞–ø–∫–∏
        "database_protection/",
        "backups/",
        "babel/",
        "venv/",
        "__pycache__/",
        ".idea/",
        "instance/",
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        "babel.cfg",
        ".dockerignore",
        ".flaskenv",
        "app.ini"
    ]
    
    removed_count = 0
    
    for item in items_to_remove:
        if os.path.exists(item):
            try:
                if os.path.isfile(item):
                    os.remove(item)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {item}")
                elif os.path.isdir(item):
                    shutil.rmtree(item)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {item}")
                removed_count += 1
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {item}: {e}")
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏
    patterns_to_remove = [
        "test_*.py",
        "check_*.py", 
        "fix_*.py",
        "verify_*.py",
        "create_*.py",
        "update_*.py",
        "set_*.py",
        "demo_*.py",
        "migrate_*.py",
        "recreate_*.py",
        "backup_*.py",
        "safe_*.py",
        "start_*.py",
        "auto_*.py",
        "database_protection_system*.py",
        "*_REPORT.md",
        "*_GUIDE.md"
    ]
    
    for pattern in patterns_to_remove:
        for file_path in glob.glob(pattern):
            if os.path.basename(file_path) != "init_database.py":  # –ù–µ —É–¥–∞–ª—è–µ–º –≤–∞–∂–Ω—ã–π —Ñ–∞–π–ª
                try:
                    os.remove(file_path)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file_path}")
                    removed_count += 1
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {file_path}: {e}")
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {removed_count}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ñ–∞–π–ª—ã
    print(f"\nüìÅ –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:")
    for item in os.listdir('.'):
        if os.path.isfile(item):
            print(f"   üìÑ {item}")
        elif os.path.isdir(item):
            print(f"   üìÅ {item}/")
    
    print(f"\nüéØ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ!")
    print(f"   –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
    print(f"   - app/ (–æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)")
    print(f"   - requirements.txt (–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)")
    print(f"   - run.py (—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞)")
    print(f"   - init_database.py (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î)")
    print(f"   - README.md (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)")
    print(f"   - .gitignore (–∏—Å–∫–ª—é—á–µ–Ω–∏—è)")
    print(f"   - Dockerfile, docker-compose.yml (Docker)")
    print(f"   - nginx/ (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx)")

if __name__ == '__main__':
    cleanup_repository()

