#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

from app import create_app
from app.extensions import db
from app.models.users import Users
from datetime import datetime
import pytz

def fix_registration_dates():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    app = create_app()
    
    with app.app_context():
        try:
            print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ===\n")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users = Users.query.all()
            
            if not users:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            # –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
            moscow_tz = pytz.timezone('Europe/Moscow')
            current_time = datetime.now(moscow_tz)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            updated_count = 0
            for user in users:
                old_date = user.registration_date
                
                # –ï—Å–ª–∏ –≤—Ä–µ–º—è –±–µ–∑ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞, –¥–æ–±–∞–≤–ª—è–µ–º –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
                if old_date and old_date.tzinfo is None:
                    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –≤—Ä–µ–º—è —É–∂–µ –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏
                    user.registration_date = moscow_tz.localize(old_date)
                else:
                    # –ï—Å–ª–∏ –≤—Ä–µ–º—è —É–∂–µ —Å —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º, –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞ —Ç–µ–∫—É—â–µ–µ
                    user.registration_date = current_time
                
                updated_count += 1
                print(f"  ‚úÖ {user.login}: {old_date} ‚Üí {user.registration_date}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            db.session.commit()
            
            print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print(f"üïê –¢–µ–∫—É—â–µ–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {current_time}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            db.session.rollback()

def test_timezone():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ß–ê–°–û–í–´–• –ü–û–Ø–°–û–í ===\n")
    
    # –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_tz = pytz.timezone('Europe/Moscow')
    moscow_time = datetime.now(moscow_tz)
    
    # UTC –≤—Ä–µ–º—è
    utc_tz = pytz.UTC
    utc_time = datetime.now(utc_tz)
    
    # –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–∏—Å—Ç–µ–º—ã
    local_time = datetime.now()
    
    print(f"üïê –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è: {moscow_time}")
    print(f"üåç UTC –≤—Ä–µ–º—è: {utc_time}")
    print(f"üíª –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {local_time}")
    print(f"üìä –†–∞–∑–Ω–∏—Ü–∞ UTC-–ú–æ—Å–∫–≤–∞: {utc_time.astimezone(moscow_tz) - moscow_time}")

if __name__ == '__main__':
    test_timezone()
    print("\n" + "="*50 + "\n")
    fix_registration_dates()
