#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

from app import create_app
from app.extensions import db
from app.models.users import Users
from datetime import datetime
import pytz

def fix_registration_dates():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    app = create_app()
    
    with app.app_context():
        try:
            print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ===\n")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users = Users.query.all()
            
            if not users:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            # –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
            moscow_tz = pytz.timezone('Europe/Moscow')
            current_time = datetime.now(moscow_tz)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            updated_count = 0
            for user in users:
                old_date = user.registration_date
                user.registration_date = current_time
                updated_count += 1
                print(f"  ‚úÖ {user.login}: {old_date} ‚Üí {current_time}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            db.session.commit()
            
            print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print(f"üïê –ù–æ–≤–æ–µ –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {current_time}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            db.session.rollback()

if __name__ == '__main__':
    fix_registration_dates()
